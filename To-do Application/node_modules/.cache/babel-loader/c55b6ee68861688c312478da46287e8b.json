{"ast":null,"code":"var _jsxFileName = \"/Users/nabeelamin/Desktop/PERSONAL_PROJECTS/React/my-app/src/Components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport M from \"minimatch\";\nimport { useState } from \"react\";\nimport Backdrop from \"./Backdrop\";\nimport Modal from \"./Modal\";\n/*\n    props are important for making reusable components\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo(props) {\n  _s();\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  function deleteHandler() {\n    setModalIsOpen(true);\n  }\n\n  function closeModal() {\n    setModalIsOpen(false);\n  }\n\n  return (\n    /*#__PURE__*/\n\n    /*\n        className -> class in css \n        className = some css name you gave\n      */\n    _jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: deleteHandler,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), modalIsOpen && /*#__PURE__*/_jsxDEV(Modal, {\n        onCancel: closeModal,\n        onConfirm: closeModal,\n        cancel: \"Cancel\",\n        confirm: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 23\n      }, this), modalIsOpen && /*#__PURE__*/_jsxDEV(Backdrop, {\n        onClick: closeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(Todo, \"d4gKB9FOjUoqrytIak5jiPIqzB0=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/nabeelamin/Desktop/PERSONAL_PROJECTS/React/my-app/src/Components/Todo.js"],"names":["M","useState","Backdrop","Modal","Todo","props","modalIsOpen","setModalIsOpen","deleteHandler","closeModal","text"],"mappings":";;;AAAA,OAAOA,CAAP,MAAc,WAAd;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA;AACA;AACA;;;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA9C;;AACA,WAASO,aAAT,GAAyB;AACvBD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD;;AACD,WAASE,UAAT,GAAsB;AACpBF,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD;;AACD;AAAA;;AACE;AACJ;AACA;AACA;AACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BAKE;AAAA,kBAAKF,KAAK,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BAKE;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAwB,UAAA,OAAO,EAAEF,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,cANF,EAoBGF,WAAW,iBAAI,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAEG,UAAjB;AAA6B,QAAA,SAAS,EAAEA,UAAxC;AAAoD,QAAA,MAAM,EAAC,QAA3D;AAAoE,QAAA,OAAO,EAAC;AAA5E;AAAA;AAAA;AAAA;AAAA,cApBlB,EA0BGH,WAAW,iBAAI,QAAC,QAAD;AAAU,QAAA,OAAO,EAAEG;AAAnB;AAAA;AAAA;AAAA;AAAA,cA1BlB;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAkCD;;GA1CQL,I;;KAAAA,I;AA4CT,eAAeA,IAAf","sourcesContent":["import M from \"minimatch\";\nimport { useState } from \"react\";\nimport Backdrop from \"./Backdrop\";\nimport Modal from \"./Modal\";\n/*\n    props are important for making reusable components\n*/\nfunction Todo(props) {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  function deleteHandler() {\n    setModalIsOpen(true);\n  }\n  function closeModal() {\n    setModalIsOpen(false);\n  }\n  return (\n    /*\n        className -> class in css \n        className = some css name you gave\n      */\n    <div className=\"card\">\n      {/*\n            to make dynamic names for titles simply call props (parameter of function)\n            .whatever you need to call\n        */}\n      <h2>{props.text}</h2>\n      <div className=\"actions\">\n        {/*\n            onClick is a built in parameter of built in react modules, therefore it works\n            without any assitance\n          */}\n        <button className=\"btn\" onClick={deleteHandler}>\n          Delete\n        </button>\n      </div>\n      {/*\n        here in JS {} we write if modalisopen and the element Modal. Since Modal is always\n        true, as soon as modalIsOpen is called we can have the <Modal /> return\n        since in  JS if two elements between && are true, the second value is returned\n      */}\n      {modalIsOpen && <Modal onCancel={closeModal} onConfirm={closeModal} cancel=\"Cancel\" confirm=\"Confirm\"/>}\n      {/*\n        onClick here is not a built in as Backdrop is not a built in module, therefore\n        it does not have any built in functionality, instead we have to go to BackDrop\n        and add this functionality in\n      */}\n      {modalIsOpen && <Backdrop onClick={closeModal} />}\n    </div>\n  );\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}